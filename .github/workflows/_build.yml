---
name: Build

on: 
  workflow_call:
    inputs:
      is-release:
        type: boolean
        default: false
    outputs:
      version:
        description: "version built"
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    name: Test & Build
    runs-on: ubuntu-22.04
    env:
      _BOT_EMAIL: 106330231+bitwarden-devops-bot@users.noreply.github.com
      _BOT_NAME: bitwarden-devops-bot
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Generate Version
        run: |
          echo "Calculating next version..."
          base_version=$(cat version.json | jq -r .baseVersion)

          if [[ "${{ inputs.is-release }}" == "true" ]]; then
            version_suffix=$(date "+%Y%m%d-%H%M")
          else
            version_suffix=${GITHUB_SHA:0:7}
          fi

          echo "  version: $base_version.$version_suffix"
          jq --arg version "$base_version.$version_suffix" '.version = $version' version.json > version.json.tmp
          mv version.json.tmp version.json
          echo "Done"

      - name: Get Version
        id: version
        run: |
          version=$(cat version.json | jq -r .version)
          echo "Version: $version"
          echo "value=$version" >> $GITHUB_OUTPUT

      - name: Run Tests
        run: |
          echo "Running tests..."
          echo "Done"

      - name: Build Artifact
        run: |
          echo "Building artifact..."
          echo "Done"

      - name: Tag commit
        if: inputs.is-release
        env:
          TAG_VERSION: ${{ steps.version.outputs.value }}
        run: |
          git config --local user.email "${{ env._BOT_EMAIL }}"
          git config --local user.name "${{ env._BOT_NAME }}"

          echo "Creating GitHub tag..."
          git add version.json
          git commit -m "Bump Version to $TAG_VERSION"
          git tag -a v$TAG_VERSION -m "Release version $TAG_VERSION" $(git rev-parse HEAD)
          git push --tags
          echo "Done"
